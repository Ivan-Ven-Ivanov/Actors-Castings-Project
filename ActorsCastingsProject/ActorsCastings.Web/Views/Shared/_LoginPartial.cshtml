@using ActorsCastings.Data.Models
@using ActorsCastings.Services.Data.Interfaces
@using Microsoft.AspNetCore.Identity

@using static ActorsCastings.Common.ApplicationConstants

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IActorService ActorService
@inject ICastingAgentService CastingAgentService

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <form asp-area="" asp-controller="Home" asp-action="Search" method="get" class="d-flex ms-auto me-2">
                <input type="text" name="query" class="form-control me-2" placeholder="Search..." aria-label="Search" value="@ViewData["query"]">
                <button class="btn btn-outline-primary" type="submit">
                    <i class="fas fa-search"></i>
                </button>
            </form>
        </li>
        <li class="nav-item">
            @{
                string userId = UserManager.GetUserId(User);
                if (User.IsInRole(AdminRoleName))
                {
                    string currentArea = ViewContext.RouteData.Values["area"]?.ToString() ?? "";

                    if (currentArea == "Admin")
                    {
                        <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">View as User</a>
                    }
                    else
                    {
                        <a class="nav-link text-dark" asp-area="Admin" asp-controller="Home" asp-action="Index">View as Admin</a>
                    }
                }
                else if (await ActorService.IsUserActorAsync(userId))
                {
                    <a class="nav-link text-dark" asp-area="" asp-controller="ActorProfile" asp-action="Index">My Profile</a>
                }
                else if (await CastingAgentService.IsUserCastingAgentAsync(userId))
                {
                    <a class="nav-link text-dark" asp-area="" asp-controller="CastingAgentProfile" asp-action="Index">My Profile</a>
                }
            }
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
